package basiccode.myarray;

//数组初始化，java中的数组必须先初始化才能使用。所谓初始化，就是在内存中，为数组开辟空间，并将数据存入容器之中的过程。

//动态初始化，在初始化时候，只需要指定数组长度，由系统为数组分配初始值。

public class Array2 {
    public static void main(String[] args) {

        //数据类型[] 数组名 = new 数据类型[数组的长度];

        //通过new关键字创建了一个int类型的数组容器，该容器可以存储5个int类型的整数,该容器被arr数组变量所记录。

        int[] arr = new int[5];

        //[I@10f87f48||arr数组的内存地址

        //打印数组变量的时候会打印出数组的内存地址

        //数组在创建完毕后即使没有赋值，也可以取出，但取出的元素都是默认初始化值。

        System.out.println(arr);

        //数组名[索引] 访问数组容器中的空间位置
        //空间为5的数组，索引从0开始一直到4
        System.out.println(arr[0]); //0 系统自动分配的初始默认化值

        System.out.println(arr[1]);

        System.out.println(arr[2]);

        System.out.println("-------------------");

        /*索引：是数组中空间的编号。

              索引从0开始。
              索引是连续的。
              索引逐一增加，每次加1。

         作用：访问数组容器中的空间位置。

         */
        arr[0]=11;

        arr[1]=22;

        arr[2]=33;

        System.out.println(arr[0]); //0 系统自动分配的初始默认化值

        System.out.println(arr[1]);

        System.out.println(arr[2]);

        /*
        内存分配：

        java程序在运行时，需要在内存中分配空间。
        为了提高运算效率，就对空间进行了不同区域的划分。
        每一片区域都有特定的数据处理方式和内存管理方式。

        栈内存：方法运行时，进入的内存，局部变量都会存放于这块内存当中。
        堆内存：new出来的内容都会进入堆内存之中，并且会存在地址值。
        方法区：字节码文件（.class文件）加载时进入的内存
        本地方法栈：调用操作系统相关资源
        寄存器：交给cpu去使用

        调用过程：1,该类的字节码文件加载进入方法区main方法存在于字节码文件之中。
                2,main方法被JVM自动调用进入栈内存执行（变量在方法之中会一同进入栈内存之中）。
                3,arr变量在main方法之中声明[int[] arr]（new出来的内容都会进入堆内存之中，并且会存在地址值。）
                4,new int[5]
                  通过new关键字在堆内存之中开辟空间，并产生地址值。
                  因为new是长度为5的数组，所以会划分出5块小格子。
                  每个格子都有自己的索引和默认初始化值
                5,将地址值赋给main方法之中的arr变量。arr可以根据地址找到数组

                java中内存分配各种数据类型和默认值
                整数：0
                浮点数：0.0
                布尔:false
                字符：空字符
                引用数据类型:null
         */

    }
}
